<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- The Basics -->
	<groupId>org.odlabs.wiquery</groupId>
	<artifactId>wiquery-examples</artifactId>
	<packaging>war</packaging>
	<version>1.0</version>

	<name>WiQuery examples</name>
	<description>WiQuery examples</description>

	<repositories>
		<repository>
			<id>google-maven-repo</id>
			<name>Google Maven Repository</name>
			<url>http://google-maven-repository.googlecode.com/svn/repository/</url>
		</repository>
		
		<repository>
			<id>wiquery-maven-repo</id>
			<url>http://wiquery.googlecode.com/svn/repo</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>maven-gae-plugin-repo</id>
			<name>Maven Google App Engine Repository</name>
			<url>http://maven-gae-plugin.googlecode.com/svn/repository/</url>
		</pluginRepository>
		
		<pluginRepository>
			<id>wiquery-maven-repo</id>
			<url>http://wiquery.googlecode.com/svn/repo</url>
		</pluginRepository>
	</pluginRepositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jetty.version>6.1.17</jetty.version>
		<wiquery.version>1.1-SNAPSHOT</wiquery.version>
		<wicket.version>1.4.9</wicket.version>
		<groovy.version>1.6.4</groovy.version>
		<jackson.version>1.4.2</jackson.version>
		
		<!--
			Specify AppEngine version for your project. It should match SDK
			version pointed to by ${gae.home} property (Typically, one used by
			your Eclipse plug-in)
		-->
		<gae.version>1.3.5</gae.version>
		<gae.home>C:/appengine-java-sdk-1.3.5</gae.home>
		<!--
			Upload to http://test.latest.<applicationName>.appspot.com by default
		-->
		<gae.application.version>test</gae.application.version>
		<!-- port defaults to 8080 -->
		<gae.port>8080</gae.port>
	</properties>

	<profiles>
		<!--
			We can configure our integration server to activate this profile and
			perform gae:deploy, thus uploading latest snapshot to the
			http://1.latest.<applicationName>.appspot.com automatically
		-->
		<profile>
			<id>integration-build</id>
			<properties>
				<gae.application.version>stage</gae.application.version>
			</properties>
		</profile>

		<!--
			This profile will activate automatically during release and upload
			application to the http://2.latest.<applicationName>.appspot.com (We
			might want to set the 2nd version as our applications Default version
			to be accessible at http://<applicationName>.appspot.com)
		-->
		<profile>
			<id>release-build</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>

			<properties>
				<!--
					During release, set application version in appengine-web.xml to 2
				-->
				<gae.application.version>release</gae.application.version>
			</properties>
		</profile>
	</profiles>

	<build>
		<plugins>
			<!--
				The actual maven-gae-plugin. Type "mvn gae:run" to run project, "mvn
				gae:update" to upload to GAE.
			-->
			<plugin>
				<groupId>net.kindleit</groupId>
				<artifactId>maven-gae-plugin</artifactId>
				<version>0.6.0</version>
				<configuration>
					<sdkDir>${gae.home}</sdkDir>
				</configuration>
			</plugin>

			<!--
				Upload application to the appspot automatically, during
				release:perform
			-->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<goals>gae:deploy</goals>
				</configuration>
			</plugin>

			<!-- Java compiler version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.25</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<wtpmanifest>true</wtpmanifest>
					<wtpapplicationxml>true</wtpapplicationxml>
					<wtpversion>2.0</wtpversion>
					<downloadSources>true</downloadSources>
					<downloadSources>true</downloadSources>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>org.apache.wicket</groupId>
			<artifactId>wicket</artifactId>
			<version>${wicket.version}</version>
		</dependency>		
		<dependency>
			<groupId>org.apache.wicket</groupId>
			<artifactId>wicket-extensions</artifactId>
			<version>${wicket.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.0</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>0.9.22</version>
		</dependency>
		
		<dependency>
			<groupId>de.java2html</groupId>
			<artifactId>java2html</artifactId>
			<version>5.0</version>	
		</dependency>
		
		<!--  JETTY DEPENDENCIES FOR TESTING  -->
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty</artifactId>
			<version>${jetty.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty-util</artifactId>
			<version>${jetty.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty-management</artifactId>
			<version>${jetty.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- GROOVY DEPENDENCIES -->
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>${groovy.version}</version>
		</dependency>
		
		<!-- JACKSON DEPENDENCIES -->
	    <dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		
		<!--  WIQUERY DEPENDENCIES -->
		<dependency>
			<groupId>org.odlabs.wiquery</groupId>
			<artifactId>wiquery</artifactId>
			<version>${wiquery.version}</version>
		</dependency>
	</dependencies>

</project>
