/*
 * Copyright (c) 2009 WiQuery team
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package org.odlabs.wiquery.core.commons;

import org.apache.wicket.IClusterable;
import org.apache.wicket.request.resource.IResource;
import org.apache.wicket.request.resource.PackageResourceReference;
import org.apache.wicket.util.time.Time;
import org.odlabs.wiquery.core.commons.compressed.WiQueryYUICompressedJavaScriptResourceReference;

/**
 * $Id: WiqueryGeneratedJavaScriptResourceReference.java 412 2010-09-17
 * 21:23:25Z lionel.armanet $
 * <p>
 * Makes the JavaScript template generated by wiQuery a static resource, but
 * still like any other {@link JavascriptResourceReference}.
 * </p>
 * 
 * @author Lionel Armanet
 * @author Hielke Hoeve
 * @since 1.0
 */
public class WiqueryGeneratedJavaScriptResourceReference extends
		WiQueryYUICompressedJavaScriptResourceReference implements IClusterable {

	private static final long serialVersionUID = 1L;

	public static final String TEMPLATE_NAME = "wiquery-gen.js";

	private CharSequence javaScriptCode;

	public WiqueryGeneratedJavaScriptResourceReference(
			CharSequence javaScriptCode) {
		super(WiqueryGeneratedJavaScriptResourceReference.class, System
				.currentTimeMillis() + TEMPLATE_NAME);
		this.javaScriptCode = javaScriptCode;
	}

	/**
	 * Creates a new custom Resource, which does exactly the same as
	 * {@link PackageResourceReference} except that it gets the actual
	 * javascript from a variable.
	 */
	@Override
	public IResource getResource() {
		return new WiqueryGeneratedJavaScriptResource(getScope(), getName(),
				getLocale(), getStyle(), getVariation(), javaScriptCode);
	}

	/**
	 * @return null as this resource constantly changes
	 */
	public Time lastModifiedTime() {
		return null;
	}
}